{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Analytics.svelte",
    "..\\..\\GraphEmigrant.svelte",
    "..\\..\\GraphEmigrant2.svelte",
    "..\\..\\Externa1.svelte",
    "..\\..\\Externa2.svelte",
    "..\\..\\G05.svelte",
    "..\\..\\G06.svelte",
    "..\\..\\G07.svelte",
    "..\\..\\G08.svelte",
    "..\\..\\G09.svelte",
    "..\\..\\G12.svelte",
    "..\\..\\G22.svelte",
    "..\\..\\G23.svelte",
    "..\\..\\G26.svelte",
    "..\\..\\G30.svelte",
    "..\\..\\GraphNatality.svelte",
    "..\\..\\Api-Ext1.svelte",
    "..\\..\\Api-Ext2.svelte",
    "..\\..\\Api-G02.svelte",
    "..\\..\\Api-G04.svelte",
    "..\\..\\Api-G05.svelte",
    "..\\..\\Api-G06.svelte",
    "..\\..\\Api-G08.svelte",
    "..\\..\\Api-G09.svelte",
    "..\\..\\Api-G11.svelte",
    "..\\..\\Api-G21.svelte",
    "..\\..\\Api-G23.svelte",
    "..\\..\\Api-G28.svelte",
    "..\\..\\GraphPoverty.svelte",
    "..\\..\\GraphPoverty2.svelte",
    "..\\..\\ex-01.svelte",
    "..\\..\\ex-02.svelte",
    "..\\..\\sos1920-04.svelte",
    "..\\..\\sos1920-05.svelte",
    "..\\..\\sos1920-06.svelte",
    "..\\..\\sos1920-07.svelte",
    "..\\..\\sos1920-08.svelte",
    "..\\..\\sos1920-09.svelte",
    "..\\..\\sos1920-10.svelte",
    "..\\..\\sos1920-21.svelte",
    "..\\..\\sos1920-22.svelte",
    "..\\..\\sos1920-28.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    \r\n    async function loadGraph() {\r\n        let MyDataN = [];\r\n        let MyDataP = [];\r\n        let MyDataE = [];\r\n        let MyDataGraph = [];\r\n        const resDataN = await fetch(\"/api/v2/natality-stats\");\r\n        MyDataN = await resDataN.json();\r\n        const resDataP = await fetch(\"/api/v2/poverty-stats\");\r\n        MyDataP = await resDataP.json();\r\n        const resDataE = await fetch(\"/api/v2/emigrants-stats\");\r\n        MyDataE = await resDataE.json();\r\n        MyDataN.forEach( (x) => {\r\n            MyDataP.forEach( (y) => {\r\n                MyDataE.forEach( (z) => {\r\n                    if (x.country == y.country && x.country == z.country && x.year == y.year && x.year == z.year) {\r\n                        MyDataGraph.push({name: x.country+\" \"+x.year, children: [\r\n                            {name: \"Natalidad\", children: [\r\n                                {name: \"Total\", value: parseInt(x.natality_totals/100)},\r\n                                {name: \"Hombres\", value: parseInt(x.natality_men/100)},\r\n                                {name: \"Mujeres\", value: parseInt(x.natality_women/100)}\r\n                            ]},\r\n                            {name: \"Riesgo de Pobreza\", children: [\r\n                                {name: \"Personas\", value: parseInt(y.poverty_prp)},\r\n                                {name: \"Umbral de personal\", value: parseInt(y.poverty_pt)},\r\n                                {name: \"Umbral del hogar\", value: parseInt(y.poverty_ht)}\r\n                            ]},\r\n                            {name: \"Emigracion\", children: [\r\n                                {name: \"Total\", value: parseFloat(z.em_totals/100)},\r\n                                {name: \"Hombres\", value: parseFloat(z.em_man/100)},\r\n                                {name: \"Mujeres\", value: parseFloat(z.em_woman/100)}\r\n                            ]}\r\n                        ]});\r\n                    } \r\n                })\r\n            });\r\n        });\r\n        \r\n        \r\n        // Themes begin\r\nam4core.useTheme(am4themes_kelly);\r\nam4core.useTheme(am4themes_animated);\r\n// Themes end\r\n\r\n// create chart\r\nvar chart = am4core.create(\"chartdiv\", am4plugins_sunburst.Sunburst);\r\nchart.padding(0,0,0,0);\r\nchart.radius = am4core.percent(98);\r\n\r\nchart.data = MyDataGraph;\r\n\r\nchart.colors.step = 2;\r\nchart.fontSize = 11;\r\nchart.innerRadius = am4core.percent(10);\r\n\r\n// define data fields\r\nchart.dataFields.value = \"value\";\r\nchart.dataFields.name = \"name\";\r\nchart.dataFields.children = \"children\";\r\n\r\n\r\nvar level0SeriesTemplate = new am4plugins_sunburst.SunburstSeries();\r\nlevel0SeriesTemplate.hiddenInLegend = false;\r\nchart.seriesTemplates.setKey(\"0\", level0SeriesTemplate)\r\n\r\n// this makes labels to be hidden if they don't fit\r\nlevel0SeriesTemplate.labels.template.truncate = true;\r\nlevel0SeriesTemplate.labels.template.hideOversized = true;\r\n\r\nlevel0SeriesTemplate.labels.template.adapter.add(\"rotation\", function(rotation, target) {\r\n  target.maxWidth = target.dataItem.slice.radius - target.dataItem.slice.innerRadius - 10;\r\n  target.maxHeight = Math.abs(target.dataItem.slice.arc * (target.dataItem.slice.innerRadius + target.dataItem.slice.radius) / 2 * am4core.math.RADIANS);\r\n\r\n  return rotation;\r\n})\r\n\r\n\r\nvar level1SeriesTemplate = level0SeriesTemplate.clone();\r\nchart.seriesTemplates.setKey(\"1\", level1SeriesTemplate)\r\nlevel1SeriesTemplate.fillOpacity = 0.75;\r\nlevel1SeriesTemplate.hiddenInLegend = true;\r\n\r\nvar level2SeriesTemplate = level0SeriesTemplate.clone();\r\nchart.seriesTemplates.setKey(\"2\", level2SeriesTemplate)\r\nlevel2SeriesTemplate.fillOpacity = 0.5;\r\nlevel2SeriesTemplate.hiddenInLegend = true;\r\n\r\nchart.legend = new am4charts.Legend();\r\n\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\nloadGraph();\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://www.amcharts.com/lib/4/core.js\"></script>\r\n    <script src=\"https://www.amcharts.com/lib/4/charts.js\"></script>\r\n    <script src=\"https://www.amcharts.com/lib/4/plugins/sunburst.js\"></script>\r\n    <script src=\"https://www.amcharts.com/lib/4/themes/kelly.js\"></script>\r\n    <script src=\"https://www.amcharts.com/lib/4/themes/animated.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n    <h2 style=\"text-align: center;\">Analisis de todos los datos de los miembros de SOS1920-01</h2>\r\n    \r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Atras</Button>\r\n    <p class=\"highcharts-description\">\r\n        <br>\r\n        <i>Gráfica común a las tres APIs. Representa la natalidad, la emigración y el riesgo de pobreza. Los datos de \r\n            natalidad e emigración han sido divididos entre 100 para la visualizacion óptima. </i>\r\n    </p>\r\n    <div id=\"chartdiv\"></div>\r\n    \r\n\r\n\r\n</main>\r\n\r\n<style>\r\n    body {\r\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n    }\r\n    #chartdiv {\r\n  height: 650px;\r\n}\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \t\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country+\"\" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.em_man), parseInt(x.em_woman),parseInt(x.em_totals)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n        });\r\n        \r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        legend: {\r\n            layout: 'horizontal',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 50,\r\n            y: 0,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'em_man',\r\n                'em_woman',\r\n                'em_totals'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Gráfica sobre emigrantes en varios países\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import ApexCharts from 'apexcharts'\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n\t\tlet aux = []\r\n        let valores = []\r\n        let valores1 = []\r\n        let valores2 = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n            if (x.country == 'france') {\r\n                aux = parseInt(x.em_totals)\r\n\t\t\t\tvalores.push(aux);\r\n            }\r\n        });\r\n        MisDatos.forEach((x) => {\r\n            if (x.country == 'france') {\r\n                aux = parseInt(x.em_man)\r\n\t\t\t\tvalores1.push(aux);\r\n            }\r\n        });\r\n        MisDatos.forEach((x) => {\r\n            if (x.country == 'france') {\r\n                aux = parseInt(x.em_woman)\r\n\t\t\t\tvalores2.push(aux);\r\n            }\r\n        });\r\n\r\n        var options = {\r\n          series: [{\r\n            name: \"Francia, emigrantes totales\",\r\n            data: valores\r\n        },{\r\n            name: \"Francia, emigrantes hombres\",\r\n            data: valores1\r\n        },{\r\n            name: \"Francia, emigrantes mujeres\",\r\n            data: valores2\r\n        }],\r\n    \r\n          chart: {\r\n          height: 350,\r\n          type: 'line',\r\n          zoom: {\r\n            enabled: false\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'straight'\r\n        },\r\n        title: {\r\n          text: 'Emigrantes',\r\n          align: 'left'\r\n        },\r\n        grid: {\r\n          row: {\r\n            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n            opacity: 0.5\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: ['2010', '2015', '2017'],\r\n        }\r\n        };\r\n\r\n        var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n        chart.render();\r\n      \r\n}\r\n</script>\r\n    <svelte:head>\r\n        <script src=\"https://cdn.jsdelivr.net/npm/apexcharts\" on:load={loadGraph}></script>\r\n    </svelte:head>\r\n<main>\r\n    <div id=\"chart\">\r\n        <div id=\"timeline-chart\"></div>\r\n    </div>\r\n    <p>Emigrantes en Francia en los años 2010 ,2015 , 2017 (Realizada con apexcharts)</p>\r\n</main>\r\n<style>\r\n@import url('https://fonts.googleapis.com/css?family=Poppins');\r\n\r\n* {\r\n  font-family: 'Poppins', sans-serif;\r\n}\r\n\r\n#chart {\r\n  max-width: 760px;\r\n  margin: 35px auto;\r\n  opacity: 0.9;\r\n}\r\n\r\n#timeline-chart .apexcharts-toolbar {\r\n  opacity: 1;\r\n  border: 0;\r\n}\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let Externa1 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://covidtracking.com/api/v1/states/current.json\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"Externa1 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            Externa1 = json;\r\n\t\t\tconsole.log(Externa1)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\" || x.country == \"italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10, parseInt(x.em_woman)/10]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tExterna1.forEach((x) => {\r\n            if((x.dataQualityGrade==\"D\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.dataQualityGrade,\r\n\t\t\t\t\tdata: [parseInt(x.totalTestResults),parseInt(x.totalTestResultsIncrease),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - Externa1'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'totalTestResults',\r\n                'totalTestResultsIncrease',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10 para observar mejor los datos en la gráfica) y pruebas del covid de grado de calidad D\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let Externa2 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://coronavirus-19-api.herokuapp.com/countries\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"Externa2 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            Externa2 = json;\r\n\t\t\tconsole.log(Externa2)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10, parseInt(x.em_woman)/10]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tExterna2.forEach((x) => {\r\n            if((x.country==\"Mexico\"||x.country==\"Canada\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [parseInt(x.deaths),parseInt(x.recovered),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - Externa2'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'deaths',\r\n                'recovered',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10 para observar mejor los datos en la gráfica) e las muertes y recuperaciones a causa del covid-19\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G05 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-05.herokuapp.com/api/v1/books-exports\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G05 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G05 = json;\r\n\t\t\tconsole.log(G05)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10, parseInt(x.em_woman)/10]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG05.forEach((x) => {\r\n            if((x.country==\"france\"||x.country==\"portugal\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [parseInt(x.exp_book),parseInt(x.exp_editorial),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G05'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'exp_book',\r\n                'exp_editorial',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10 para observar mejor los datos en la gráfica) e incendios\r\n        </p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G06 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-06.herokuapp.com/api/v2/lottery-sales\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G06 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G06 = json;\r\n\t\t\tconsole.log(G06)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man), parseInt(x.em_woman)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG06.forEach((x) => {\r\n            if(x.year==2016 && (x.province==\"Madrid\"||x.province==\"Barcelona\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [parseInt(x.total)/10,parseInt(x.xmas)/10,0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G06'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'total',\r\n                'xmas',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes y la venta de loterias(/10 para observar mejor los datos en la gráfica)\r\n        </p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G07 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-07.herokuapp.com/api/v2/foodsImports\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G07 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G07 = json;\r\n\t\t\tconsole.log(G07)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10000, parseInt(x.em_woman)/10000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG07.forEach((x) => {\r\n            if(x.year==\"2010\" && (x.name==\"BRAZIL\"||x.name==\"WORLD\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.name,\r\n\t\t\t\t\tdata: [x[\"fruitJuice\"],x[\"TSweANDCndy\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G07'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'fruitJuice',\r\n                'TSweANDCndy',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10000 para observar mejor los datos en la gráfica) e importaciones de alimentos\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G08 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-08.herokuapp.com/api/v1/motogp-statistics\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G08 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G08 = json;\r\n\t\t\tconsole.log(G08)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10000, parseInt(x.em_woman)/10000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG08.forEach((x) => {\r\n            if((x.country==\"Australia\" && x.pilot==\"Mick_Doohan\"||x.country==\"Great_Britain\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"victory\"],x[\"podium\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G08'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'victory',\r\n                'podium',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10000 para observar mejor los datos en la gráfica) y motos\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G09 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-09.herokuapp.com/api/v3/plugin-vehicles-stats\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G09 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G09 = json;\r\n\t\t\tconsole.log(G09)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/100, parseInt(x.em_woman)/100]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG09.forEach((x) => {\r\n            if((x.country==\"Netherlands\"||x.country==\"Canada\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"pev-stock\"],x[\"annual-sale\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G09'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'pev-stock',\r\n                'annual-sale:',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/100 para observar mejor los datos en la gráfica) y estadísticas de vehículos\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G12 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-12.herokuapp.com/api/v2/overdose-deaths\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G12 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G12 = json;\r\n\t\t\tconsole.log(G12)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10000, parseInt(x.em_woman)/10000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG12.forEach((x) => {\r\n            if((x.country==\"Croatia\"||x.country==\"Ireland\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"death_male\"],x[\"death_female\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G12'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'death_male',\r\n                'death_female',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10000 para observar mejor los datos en la gráfica) y muertes por sobredosis\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G22 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-22.herokuapp.com/api/v2/formula-stats\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G22 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G22 = json;\r\n\t\t\tconsole.log(G22)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/1000000, parseInt(x.em_woman)/1000000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG22.forEach((x) => {\r\n            if((x.country==\"mexico\"||x.country==\"france\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"pilotnumber\"],x[\"victorynumber\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G22'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'pilotnumber',\r\n                'victorynumber',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/1000000 para observar mejor los datos en la gráfica) y estadísticas fórmula\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G23 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"/api/v2/fires-stats\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G23 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G23 = json;\r\n\t\t\tconsole.log(G23)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/1000, parseInt(x.em_woman)/1000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG23.forEach((x) => {\r\n            if(x.year==2008 && (x.community==\"aragon\"||x.community==\"canarias\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.community,\r\n\t\t\t\t\tdata: [x[\"total_fire\"],x[\"forest_area\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G23'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'total_fire',\r\n                'forest_area',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación(con proxy) entre emigrantes(/1000 para observar mejor los datos en la gráfica) y incendios\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G26 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-26.herokuapp.com/api/v2/global-coef\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G26 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G26 = json;\r\n\t\t\tconsole.log(G26)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/10000, parseInt(x.em_woman)/10000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG26.forEach((x) => {\r\n            if((x.country==\"france\"||x.country==\"italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"coefficient\"],x[\"fed\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G26'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'coefficient',\r\n                'fed',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/10000 para observar mejor los datos en la gráfica) y coeficiente global\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\t    let MisDatos = [];\r\n\t    let G30 = [];\r\n    \r\n\t    const EmigrantDatos = await fetch(\"/api/v1/emigrants-stats\");\r\n\t    MisDatos = await EmigrantDatos.json();\r\n\r\n        const DatosExternos = await fetch(\"https://sos1920-30.herokuapp.com/api/v2/sugarconsume\");\r\n\t\tif (DatosExternos.ok) {\r\n\t\t\tconsole.log(\"G30 cargado\");\r\n\t\t\tconst json = await DatosExternos.json();\r\n            G30 = json;\r\n\t\t\tconsole.log(G30)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n        let valores = []\r\n        \r\n        MisDatos.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.em_man)/100, parseInt(x.em_woman)/100]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tG30.forEach((x) => {\r\n            if(x.year==2015 && (x.place==\"India\"||x.place==\"Turquia\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.place,\r\n\t\t\t\t\tdata: [x[\"year\"],x[\"sugarconsume\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n    Highcharts.chart('container', {\r\n        chart: {\r\n            type: 'areaspline'\r\n        },\r\n        title: {\r\n            text: 'G01 - G30'\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'left',\r\n            verticalAlign: 'top',\r\n            x: 150,\r\n            y: 100,\r\n            floating: true,\r\n            borderWidth: 1,\r\n            backgroundColor:\r\n                Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'year',\r\n                'sugarconsume',\r\n                'em_man',\r\n                'em_woman'\r\n            ],\r\n            plotBands: [{ // visualize the weekend\r\n                from: 4.5,\r\n                to: 6.5,\r\n                color: 'rgba(68, 170, 213, .2)'\r\n            }]\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: 'Unidades'\r\n            }\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            valueSuffix: ' units'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n            areaspline: {\r\n                fillOpacity: 0.5\r\n            }\r\n        },\r\n        series:  valores\r\n        \r\n    });\r\n}\r\n</script>\r\n\r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n    </svelte:head>\r\n<main>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            Relación entre emigrantes(/100 para observar mejor los datos en la gráfica) y consumo de azúcar\r\n        </p>\r\n        <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n#container {\r\n    height: 400px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport Button from \"sveltestrap/src/Button.svelte\";\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n    async function loadGraph() {\r\n        \r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n        \r\n        const resData = await fetch(\"/api/v2/natality-stats\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n                MyDataGraph.push({name: x.country + \" \" + x.year, data: ['',parseInt(x.natality_men), parseInt(x.natality_women), \r\n                parseInt(x.natality_totals),''], pointPlacement: 'on'});\r\n            });\r\n            //Las dos comillas son para que me salgan todas las barras, meto una varibale vacía para ello.\r\n\r\n\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'column'\r\n    },\r\n    title: {\r\n        text: '🤰NATALIDAD🤰',\r\n    },\r\n    xAxis: {\r\n        categories: [\r\n            '',\r\n            'Natalidad en Hombres',\r\n            'Natalidad en Mujeres',\r\n            'Natalidad Total',\r\n            ''\r\n        ],\r\n        crosshair: true\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'Número de nacimientos'\r\n        }\r\n    },\r\n    tooltip: {\r\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n            '<td style=\"padding:0\"><b>{point.y:.1f} mil personas</b></td></tr>',\r\n        footerFormat: '</table>',\r\n        shared: true,\r\n        useHTML: true\r\n    },\r\n    plotOptions: {\r\n        column: {\r\n            pointPadding: 0.2,\r\n            borderWidth: 0\r\n        }\r\n    },\r\n            \r\n            series: MyDataGraph\r\n        });\r\n    }\r\n    </script>\r\n    \r\n    <svelte:head>\r\n        <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n        <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n        \r\n    </svelte:head>\r\n    \r\n    <main>\r\n        <figure class=\"highcharts-figure\">\r\n            <div id=\"container\"></div>\r\n            <p class=\"highcharts-description\">\r\n                <br>\r\n                <i>En la gráfica podemos observar la representación de la natalidad, \r\n                con número de nacimientos, en hombres y mujeres de algunos países del mundo.</i>\r\n            </p>\r\n        </figure>\r\n\r\n        <p></p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    \r\n    </main>\r\n    <style>\r\n        #container {\r\n    height: 450px; \r\n}\r\n\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 2em auto;\r\n}\r\n\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_Ext1 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api ext1 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_Ext1 = json;\r\n\t\t\tconsole.log(API_Ext1)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,parseInt(x.natality_totals)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_Ext1.forEach((x) => {\r\n            if((x.name==\"Afghanistan\"||x.name==\"Åland Islands\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.region,\r\n\t\t\t\t\tdata: [parseInt(x.area), 0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Area'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Area\", \"Nacimiento Totales\",]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con una API Externa a traves de \"https://restcountries.eu/rest/v2/all\".\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_Ext1 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://disease.sh/v2/countries?yesterday=false&sort=deaths&allowNull=true\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api ext1 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_Ext1 = json;\r\n\t\t\tconsole.log(API_Ext1)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,parseInt(x.natality_totals)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_Ext1.forEach((x) => {\r\n            if((x.country==\"USA\"|| x.country==\"Italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [parseInt(x.deaths), 0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Muertes'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Area\", \"Nacimiento Totales\",]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con una API \r\n        Externa a traves de \"https://disease.sh/v2/countries?yesterday=false&sort=deaths&allowNull=true\".\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_02 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-02.herokuapp.com/api/v2/rural-tourism-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 02 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_02 = json;\r\n\t\t\tconsole.log(API_02)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men), parseInt(x.natality_women)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_02.forEach((x) => {\r\n            if(x.year==2016 && (x.province==\"almeria\"||x.province==\"cadiz\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.traveller),parseInt(x.overnightstay),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Turismo Rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Viajeros\", \"Pernoctaciones\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G02.\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_02 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-04.herokuapp.com/api/v1/vehicles\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 02 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_02 = json;\r\n\t\t\tconsole.log(API_02)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men), parseInt(x.natality_women)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_02.forEach((x) => {\r\n            if(x.year==2016 && (x.province==\"almeria\"||x.province==\"cadiz\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.traveller),parseInt(x.overnightstay),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Turismo Rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Viajeros\", \"Pernoctaciones\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G02.\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_05 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-05.herokuapp.com/api/v1/health_public\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 05 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_05 = json;\r\n\t\t\tconsole.log(API_05)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men)/1000,parseInt(x.natality_women)/1000]\r\n\t\t\t\t}//Dividemos el valor de los datos para que salga una mejor representación.\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_05.forEach((x) => {\r\n            if(x.year==2016 && (x.country==\"italy\"||x.country==\"uk\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"public_spending\"],x[\"public_spending_pib\"],0,0]\r\n\t\t\t\t}//Datos pequeños y no se pueden mostrar todos a la vez\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Salud Pública'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Gasto público\", \"Gasto público pib\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G05.\r\n        <br>\r\n        <i>NOTA: Los valores de \"Natalidad Hombres\" y \"Natalidad Mujeres\" están dividos entre 1000 para una representación más visual.</i>\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_06 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-06.herokuapp.com/api/v2/accstats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 06 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_06 = json;\r\n\t\t\tconsole.log(API_06)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men)/100, parseInt(x.natality_women)/100]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_06.forEach((x) => {\r\n            if(x.year==2017 && (x.province==\"Pontevedra\"||x.province==\"Segovia\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.accvictotal),parseInt(x.accfall),0,0] //Datos muy pequeños, si pinchamos en la provincia que queremos nos salen dichos datos.\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Turismo Rural'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Accidentes Totales\", \"Accidentes Fallecidos\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n\t\tEn esta gráfica podemos ver la integracion con la API del G06.\r\n\t\t<br>\r\n\t\t<i>NOTA: Los valores de \"Natalidad Hombres\" y \"Natalidad Mujeres\" están dividos entre 100 para una representación más visual.</i>\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_08 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-08.herokuapp.com/api/v2/ucl_stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 08 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_08 = json;\r\n\t\t\tconsole.log(API_08)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men)/1000, parseInt(x.natality_women)/1000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_08.forEach((x) => {\r\n            if((x.country==\"Spain\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.team + \" \" + x.year,\r\n\t\t\t\t\tdata: [parseInt(x.title),parseInt(x.victory),0,0] //Datos pequeños pinchar en el equipo correspondiente\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y UCL'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Titulos\", \"Victorias\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n\t\tEn esta gráfica podemos ver la integracion con la API del G08.\r\n\t\t<br>\r\n\t\t<i>NOTA: Los valores de \"Natalidad Hombres\" y \"Natalidad Mujeres\" están dividos entre 1000 para una representación visual.</i>\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n\tlet MyData = [];\r\n\tlet API_09 = [];\r\n\t\r\n\tasync function loadGraph(){\r\n\t\t\r\n\t\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\t\tMyData = await resData.json();\r\n\t\tconst resData2 = await fetch(\"https://sos1920-09.herokuapp.com/api/v2/renewable-sources-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 09 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_09 = json;\r\n\t\t\tconsole.log(API_09)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"italy\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men)/1000,parseInt(x.natality_women)/1000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_09.forEach((x) => {\r\n            if(x.year==2016 && (x.country==\"Italy\"||x.country==\"Spain\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"percentage-hydropower-total\"],x[\"percentage-wind-power-total\"],0,0]\r\n\t\t\t\t}//Datos pequeños y no se pueden mostrar todos a la vez\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Energías Renovables'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"% Hidroeléctrica\", \"% Eólica\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n\t\tEn esta gráfica podemos ver la integracion con la API del G09.\r\n\t\t<br>\r\n\t\t<i>NOTA: Los valores de \"Natalidad Hombres\" y \"Natalidad Mujeres\" están dividos entre 1000 para una representación visual.</i>\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_11 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"http://sos1920-11.herokuapp.com/api/v2/crime-rate-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 11 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_11 = json;\r\n\t\t\tconsole.log(API_11)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,parseInt(x.natality_men), parseInt(x.natality_women)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_11.forEach((x) => {\r\n            if(x.year==2016 && x.country==\"Venezuela\"){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.cr_homicount),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Tasa de Criminalidad'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Homicidios\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G11.\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_21 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-21.herokuapp.com/api/v2/driving-licenses\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 21 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_21 = json;\r\n\t\t\tconsole.log(API_21)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,parseInt(x.natality_men), parseInt(x.natality_women)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_21.forEach((x) => {\r\n            if(x.year==2016 && x.country==\"Venezuela\"){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.cr_homicount),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Licencia Conducción'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Licencias\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G21.\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_23 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-23.herokuapp.com/api/v2/cigarretes-sales\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 23 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_23 = json;\r\n\t\t\tconsole.log(API_23)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,parseInt(x.natality_men)/1000, parseInt(x.natality_women)/1000]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_23.forEach((x) => {\r\n            if(x.year==2009 && (x.community==\"Asturias\" || x.community==\"Aragon\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.community +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.cigarrete_sale),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y Ventas de Cigarillos'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Ventas Cigarillos\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n\t\tEn esta gráfica podemos ver la integracion con la API del G23.\r\n\t\t<i>NOTA: Los valores de \"Natalidad Hombres\" y \"Natalidad Mujeres\" están dividos entre 1000 para una representación visual.</i>\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_28 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/natality-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"/api/v1/gce\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 28 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_28 = json;\r\n\t\t\tconsole.log(API_28)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.natality_men), parseInt(x.natality_women)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_28.forEach((x) => {\r\n            if(x.year==2014 && (x.country==\"Spain\" || x.country==\"Germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.gce_country),parseInt(x.gce_cars),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \r\n\t\t\r\n\r\n\t\t});\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'column'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natalidad y GCE'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: [\"Medias Países por producción\", \"Media de producción Coches\", \"Natalidad Hombres\", \"Natalidad Mujeres\"]\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Numero'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\theaderFormat: '<b>{point.x}</b><br/>',\r\n\t\t\t\tpointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tstacking: 'normal',\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n</svelte:head>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n        En esta gráfica podemos ver la integracion con la API del G28.\r\n\t</p>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n</figure>\r\n\r\n<style>\r\n\t#container {\r\n    height: 400px; \r\n}\r\n.highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 800px;\r\n    margin: 1em auto;\r\n}\r\n.highcharts-data-table table {\r\n    font-family: Verdana, sans-serif;\r\n    border-collapse: collapse;\r\n    border: 1px solid #EBEBEB;\r\n    margin: 10px auto;\r\n    text-align: center;\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "<script>\r\nimport Button from \"sveltestrap/src/Button.svelte\"; \r\nimport { pop } from \"svelte-spa-router\";\r\nasync function loadGraph() {\r\n\t\r\n\tlet MyData = [];\r\n\tlet MyDataGraph = [];\r\n\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    \r\n    MyData.forEach( (x) => {\r\n            MyDataGraph.push(\r\n            {name:x.country + \" \" + x.year, \r\n            data: ['',parseInt(x.poverty_prp), parseInt(x.poverty_pt), parseInt(x.poverty_ht),''],\r\n             pointPlacement: 'on'},\r\n          );\r\n        });\r\n    Highcharts.chart('container', {\r\n    chart: {\r\n        type: 'bar'\r\n    },\r\n    title: {\r\n        text: 'Riesgo de pobreza'\r\n    },\r\n    \r\n    xAxis: {\r\n        categories: ['','Personas en riesgo de pobreza (millones)', 'Umbral de personas (Euros)', 'Umbral de pobreza (Euros)',''],\r\n        title: {\r\n            text: null\r\n        }\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: 'miles',\r\n            align: 'high'\r\n        },\r\n        labels: {\r\n            overflow: 'justify'\r\n        }\r\n    },\r\n    tooltip: {\r\n       // valueSuffix: ' miles'\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            dataLabels: {\r\n                enabled: true\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'top',\r\n        x: -40,\r\n        y: 80,\r\n        floating: false,\r\n        borderWidth: 1,\r\n        backgroundColor:\r\n            Highcharts.defaultOptions.legend.backgroundColor || '#FFFFFF',\r\n        shadow: true\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n\t\tseries: MyDataGraph\r\n    });\r\n}\r\n</script>\r\n<svelte:head>\r\n\r\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\r\n\r\n</svelte:head>\r\n\r\n<main>\r\n<figure class=\"highcharts-figure\">\r\n    <div id=\"container\"></div>\r\n    <p class=\"highcharts-description\">\r\n       <i> En la gráfica se puede observar como afecta el riesgo de pobreza en la poblacion mundial.</i>\r\n\r\n    </p>\r\n</figure>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n    min-width: 310px; \r\n    max-width: 1000px;\r\n    margin: 1em auto;\r\n}\r\n\r\n#container {\r\n    height: 600px;\r\n}\r\n\r\n.highcharts-data-table table {\r\n\tfont-family: Verdana, sans-serif;\r\n\tborder-collapse: collapse;\r\n\tborder: 1px solid #EBEBEB;\r\n\tmargin: 10px auto;\r\n\ttext-align: center;\r\n\twidth: 100%;\r\n\tmax-width: 500px;\r\n}\r\n.highcharts-data-table caption {\r\n    padding: 1em 0;\r\n    font-size: 1.2em;\r\n    color: #555;\r\n}\r\n.highcharts-data-table th {\r\n\tfont-weight: 600;\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n    padding: 0.5em;\r\n}\r\n.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n    background: #f8f8f8;\r\n}\r\n.highcharts-data-table tr:hover {\r\n    background: #f1f7ff;\r\n}\r\n\r\n</style>",
    "\r\n<script>\r\n   import Button from \"sveltestrap/src/Button.svelte\"; import { pop } from \"svelte-spa-router\";\r\n    async function loadGraph() {\r\n\r\n        let MyData = [];\r\n        let MyDataGraph = [];\r\n\r\n        const resData = await fetch(\"/api/v2/poverty-stats\");\r\n        MyData = await resData.json();\r\n        MyData.forEach( (x) => {\r\n            if (x.year == 2017) {\r\n                MyDataGraph.push({country: x.country, poverty_prp: [parseInt(x.poverty_prp)]});\r\n\r\n            }\r\n        });\r\n\r\n\r\n        am4core.ready(function() {\r\n            // Themes begin\r\n            am4core.useTheme(am4themes_kelly);\r\n\r\n            // Create chart instance\r\n            var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n\r\n            // Add data\r\n            chart.data = MyDataGraph;\r\n            // Set inner radius\r\n            chart.innerRadius = am4core.percent(35);\r\n            // Add and configure Series\r\n            var pieSeries = chart.series.push(new am4charts.PieSeries());\r\n            pieSeries.dataFields.value = \"poverty_prp\";\r\n            pieSeries.dataFields.category = \"country\";\r\n            pieSeries.slices.template.stroke = am4core.color(\"#fff\");\r\n            pieSeries.slices.template.strokeWidth = 2;\r\n            pieSeries.slices.template.strokeOpacity = 1;\r\n            // This creates initial animation\r\n            pieSeries.hiddenState.properties.opacity = 1;\r\n            pieSeries.hiddenState.properties.endAngle = -90;\r\n            pieSeries.hiddenState.properties.startAngle = -90;\r\n            });\r\n    }\r\n    \r\n    loadGraph();\r\n</script>\r\n\r\n<svelte:head>\r\n    \t<!-- ANGELA GRAPH2 -->\r\n        <script src=\"https://www.amcharts.com/lib/4/core.js\"></script>\r\n        <script src=\"https://www.amcharts.com/lib/4/charts.js\"></script>\r\n        <script src=\"https://www.amcharts.com/lib/4/themes/kelly.js\"></script>\r\n        <script src=\"https://www.amcharts.com/lib/4/themes/animated.js\" on:load=\"{loadGraph}\"></script>\r\n\r\n</svelte:head>\r\n\r\n<main>\r\n    <h3 style=\"text-align: center;\"> <i class=\"fas fa-bicycle\"></i> Personas en riesgo pobreza en 2017</h3>\t\r\n\r\n    <div id=\"chartdiv\"></div>\r\n    <p class=\"highcharts-description\">\r\n        <br>\r\n        <i>La gráfica representa el porcentaje de personas en riesgo de pobreza en 2017.</i>\r\n    </p>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\"> <i class=\"fas fa-arrow-circle-left\"></i> Atrás </Button>\r\n    <br>\r\n</main>\r\n\r\n<style>\r\n     #chartdiv {\r\n      width: 100%;\r\n      height: 500px;\r\n    }\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_ex01 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://disease.sh/v2/countries?yesterday=false&sort=deaths&allowNull=true\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api ex01 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_ex01 = json;\r\n\t\t\tconsole.log(API_ex01)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n            API_ex01.forEach((y) => {\r\n        \tif(x.year==2017 && ((x.country==\"spain\" && y.country==\"Spain\") ||(x.country==\"france\" && y.country==\"France\")||(x.country==\"italy\" && y.country==\"Italy\")||(x.country==\"germany\" && y.country==\"Germany\"))){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: y.country,\r\n\t\t\t\t\tdata: [parseInt(y.cases),parseInt(x.poverty_prp)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n            }\r\n        });\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Importaciones y riesgo de pobreza en el año 2010'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Casos', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Externa 01</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tCasos de infectados de coronavirus y Riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_ex02 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api ex02 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_ex02 = json;\r\n\t\t\tconsole.log(API_ex02)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n            API_ex02.forEach((y) => {\r\n        \tif(x.year==2010 && ((x.country==\"spain\" && y.name==\"Spain\") ||(x.country==\"france\" && y.name==\"France\")||(x.country==\"italy\" && y.name==\"Italy\")||(x.country==\"germany\" && y.name==\"Germany\"))){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: y.name,\r\n\t\t\t\t\tdata: [parseInt(y.population/1000),parseInt(x.poverty_prp)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n            }\r\n        });\r\n        });\r\n\t\t\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Poblacion y Riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Poblacion', 'Personas en riesco de pobreza'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Externa 02</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tPoblacion y riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_04 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-04.herokuapp.com/api/v1/traffic_accidents\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 04 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_04 = json;\r\n\t\t\tconsole.log(API_04)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country +\" \" +x.year,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt), parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_04.forEach((x) => {\r\n            if(x.year==2016 && (x.province==\"Pontevedra\"||x.province==\"Cadiz\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province +\" \" +x.year,\r\n\t\t\t\t\tdata: [parseInt(x.accidentWithVictims),parseInt(x.notHospitalizedWounded),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Análisis del tráfico en España y riesgo de pobreza en Europa en el año 2015'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Accidentes con víctimas', 'No hospitalizados', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Análisis del tráfico en España del grupo 04</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tAnálisis del tráfico en España y riesgo de pobreza en Europa en el año 2015.\r\n\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_05 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-05.herokuapp.com/api/v1/life_expectancies\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 05 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_05 = json;\r\n\t\t\tconsole.log(API_05)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n            API_05.forEach((y) => {\r\n        \tif(x.year==2010 && ((x.country==\"france\" && y.country==\"france\")||(x.country==\"italy\" && y.country==\"italy\")||(x.country==\"unitedKingdom\" && y.country==\"uk\"))){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: y.country,\r\n\t\t\t\t\tdata: [y.women_life_expectancy,y.men_life_expectancy,parseInt(x.poverty_pt),parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n            }\r\n        });\r\n        });\r\n\t\t\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Esperanza de vida y Riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Esperanza de vida en Mujeres', 'Esperanza de vida en Hombres', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con Esperanza de vida del grupo 05</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tEsperanza de vida y Riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_06 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-06.herokuapp.com/api/v2/not-hospitalized-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 06 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_06 = json;\r\n\t\t\tconsole.log(API_06)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt), parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_06.forEach((x) => {\r\n            if(x.year==2014 && (x.province==\"Madrid\"||x.province==\"Sevilla\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.province,\r\n\t\t\t\t\tdata: [parseInt(x.interurban),parseInt(x.urban),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Número de accidentes en los caminos de la ciudad y riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Interurbano', 'Urbano', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Número de accidentes en los caminos de la ciudad del grupo 06</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tNúmero de accidentes en los caminos de la ciudad y riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_07 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-07.herokuapp.com/api/v2/imports\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 07 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_07 = json;\r\n\t\t\tconsole.log(API_07)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2010 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt), parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_07.forEach((x) => {\r\n            if(x.year==2010 && (x.country==\"south-korea\"||x.country==\"china\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [parseInt(x.gdawaste/100),parseInt(x.gdaethylalcohol/100),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Importaciones y riesgo de pobreza en el año 2010'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Residuos', 'Alcohol', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Importaciones del grupo 07</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tImportaciones y riesgo de pobreza en el año 2010.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_08 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-08.herokuapp.com/api/v2/electricity-produced-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 08 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_08 = json;\r\n\t\t\tconsole.log(API_08)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2015 && (x.country==\"italy\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt), parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_08.forEach((x) => {\r\n            if(x.year==2018 && (x.state==\"Hawaii\"||x.state==\"California\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.state,\r\n\t\t\t\t\tdata: [parseInt(x.solar/1000),parseInt(x.coal/1000),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Electricidad Producida y Riesgo de pobreza en el año 2015 y 2018'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Energia solar', 'Carbon', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Electricidad Producida del grupo 08</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tElectricidad Producida y Riesgo de pobreza en el año 2015 y 2018.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_09 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-09.herokuapp.com/api/v3/oil-coal-nuclear-energy-consumption-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 09 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_09 = json;\r\n\t\t\tconsole.log(API_09)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt/100), parseInt(x.poverty_ht/100)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_09.forEach((x) => {\r\n            if(x.year==2017 && (x.country==\"Belgium\"||x.country==\"China\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [x[\"oil-consumption\"],x[\"coal-consumption\"],0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Energías primarias y Riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Consumo de Gasolina', 'Consumo de Carbón', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Energías primarias del grupo 09</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tEnergías primarias y Riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_10 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-10.herokuapp.com/api/v2/global-suicides\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 10 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_10 = json;\r\n\t\t\tconsole.log(API_10)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt/1000), parseInt(x.poverty_ht/1000)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_10.forEach((x) => {\r\n            if(x.year==2008 && (x.country==\"Brazil\"||x.country==\"Cuba\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [parseInt(x.men),parseInt(x.women),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Datos de Suicidios y Riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Hombres', 'Mujeres', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Datos de Suicidios del grupo 10</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tDatos de Suicidios y Riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_21 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"https://sos1920-21.herokuapp.com/api/v2/traffic-injuries\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 21 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_21 = json;\r\n\t\t\tconsole.log(API_21)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tif(x.year==2017 && (x.country==\"spain\"||x.country==\"germany\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.country,\r\n\t\t\t\t\tdata: [0,0,parseInt(x.poverty_pt), parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}\r\n        });\r\n\t\tAPI_21.forEach((x) => {\r\n            if(x.year==2017 && (x.auto_com==\"aragon\"||x.auto_com==\"asturias\")){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: x.auto_com,\r\n\t\t\t\t\tdata: [parseInt(x.accident),parseInt(x.dead),0,0]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n\t\t\t}  \t\r\n\t\t\r\n\r\n        });\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Heridos de tráfico y Riesgo de pobreza'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Accidentes', 'Muertos', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con la API Heridos de tráfico del grupo 21</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tHeridos de tráfico y Riesgo de pobreza.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_22 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"/api/v1/swim-stats\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 22 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_22 = json;\r\n\t\t\tconsole.log(API_22)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n            API_22.forEach((y) => {\r\n        \tif(x.year==2010 && ((x.country==\"france\" && y.country==\"france\")||(x.country==\"italy\" && y.country==\"italy\")||(x.country==\"unitedKingdom\" && y.country==\"united kingdom\"))){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: y.country,\r\n\t\t\t\t\tdata: [parseInt(y.yearofbirth),parseInt(y.position),parseInt(x.poverty_pt),parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n            }\r\n        });\r\n        });\r\n\t\t\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Natación y riesgo de pobreza en Italia, Francia y Reino Unido'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Años Nacimiento', 'Posición', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con Natación del grupo 22</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tNatación y riesgo de pobreza en Italia, Francia y Reino Unido.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>",
    "<script>\r\n\timport {pop} from \"svelte-spa-router\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\tasync function loadGraph(){\r\n\r\n\tlet MyData = [];\r\n\tlet API_28 = [];\r\n\t\t\r\n\tconst resData = await fetch(\"/api/v2/poverty-stats\");\r\n\tMyData = await resData.json();\r\n    \r\n    const resData2 = await fetch(\"/api/v1/ppas\");\r\n\t\tif (resData2.ok) {\r\n\t\t\tconsole.log(\"Ok, api 28 loaded\");\r\n\t\t\tconst json = await resData2.json();\r\n            API_28 = json;\r\n\t\t\tconsole.log(API_28)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR!\");\r\n        }\r\n\t\tlet aux = []\r\n\t\tlet valores = []\r\n\t\tMyData.forEach((x) => {\r\n        \tAPI_28.forEach((y) => {\r\n        \tif(x.year==2017 && ((x.country==\"france\" && y.country==\"France\")||(x.country==\"germany\" && y.country==\"Germany\")||(x.country==\"unitedKingdom\" && y.country==\"United Kingdom\")||(x.country==\"spain\" && y.country==\"Spain\"))){\t\r\n\t\t\t\taux={\r\n\t\t\t\t\tname: y.country,\r\n\t\t\t\t\tdata: [parseInt(y.aas_net),parseInt(y.ppa_per_capita),parseInt(x.poverty_pt),parseInt(x.poverty_ht)]\r\n\t\t\t\t}\r\n\t\t\t\tvalores.push(aux)\r\n            }\r\n        });\r\n        });\r\n\t\t\r\n\r\n\t\tHighcharts.chart('container', {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: 'bar'\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: 'Administrador de datos de PPA y riesgo de pobreza en el año 2017'\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: ['Salario neto', 'Paridad de poder Adquisitivo', 'Umbral de persona', 'Umbral de hogar'],\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\toverflow: 'justify'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tbar: {\r\n\t\t\t\t\tdataLabels: {\r\n\t\t\t\t\t\tenabled: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false\r\n\t\t\t},\r\n\t\t\tseries: valores\r\n\t\t});\r\n\t}\r\n</script>\r\n\t<svelte:head>\r\n\t\t<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n\t\t<script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraph}\"></script>\r\n\t</svelte:head>\r\n<main>\r\n\t<h3 style=\"text-align: center;\"> Integración con Administrador de datos de PPA del grupo 28</h3>\r\n\t<Button outline color=\"secondary\" on:click=\"{pop}\">Atrás</Button>\r\n\t<figure class=\"highcharts-figure\">\r\n\t\t<div id=\"container\"></div>\r\n\t\t<p style=\"text-align:center;\" class=\"highcharts-description\">\r\n\t\t\tAdministrador de datos de PPA y riesgo de pobreza en el año 2017.\r\n\t\t</p>\r\n\t</figure>\r\n\r\n</main>\r\n\r\n<style>\r\n\t.highcharts-figure, .highcharts-data-table table {\r\n\t\tmin-width: 310px; \r\n\t\tmax-width: 800px;\r\n\t\tmargin: 1em auto;\r\n\t}\r\n\r\n\t#container {\r\n\t\theight: 400px;\r\n\t}\r\n\r\n\t.highcharts-data-table table {\r\n\t\tfont-family: Verdana, sans-serif;\r\n\t\tborder-collapse: collapse;\r\n\t\tborder: 1px solid #EBEBEB;\r\n\t\tmargin: 10px auto;\r\n\t\ttext-align: center;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 500px;\r\n\t}\r\n\t.highcharts-data-table caption {\r\n\t\tpadding: 1em 0;\r\n\t\tfont-size: 1.2em;\r\n\t\tcolor: #555;\r\n\t}\r\n\t.highcharts-data-table th {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n\t\tpadding: 0.5em;\r\n\t}\r\n\t.highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n\t\tbackground: #f8f8f8;\r\n\t}\r\n\t.highcharts-data-table tr:hover {\r\n\t\tbackground: #f1f7ff;\r\n\t}\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "AAmII,SAAS,cAAC,CAAC,AACb,MAAM,CAAE,KAAK,AACf,CAAC;ACzCD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACVD,QAAQ,IAAI,iDAAiD,CAAC,CAAC,AAE/D,cAAE,CAAC,AACD,WAAW,CAAE,SAAS,CAAC,CAAC,UAAU,AACpC,CAAC,AAED,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,OAAO,CAAE,GAAG,AACd,CAAC;ACcD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRD,UAAU,cAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACrCO,UAAU,eAAC,CAAC,AAChB,MAAM,CAAE,KAAK,AACjB,CAAC,AAED,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACDA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACNA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACPA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACJA,UAAU,cAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACPA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACNA,UAAU,cAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,cAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACVA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACPA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACNA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACRA,UAAU,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC;ACLG,kBAAkB,eAA+B,CAAC,AAClD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC;AClCI,SAAS,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;ACeJ,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACED,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACjBD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACAD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;AChBD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC;ACRD,kBAAkB,cAA+B,CAAC,AACjD,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACjB,CAAC,AAED,UAAU,cAAC,CAAC,AACX,MAAM,CAAE,KAAK,AACd,CAAC"
}